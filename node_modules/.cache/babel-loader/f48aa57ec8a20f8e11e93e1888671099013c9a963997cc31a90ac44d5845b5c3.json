{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Austi\\\\streamlist\\\\src\\\\pages\\\\StreamListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StreamListPage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [movieTitle, setMovieTitle] = useState(\"\");\n\n  // Load saved movies from local storage when the component mounts\n  useEffect(() => {\n    const savedMovies = JSON.parse(localStorage.getItem(\"movies\")) || [];\n    setMovies(savedMovies);\n  }, []);\n\n  // Save movies to local storage whenever the list updates\n  useEffect(() => {\n    localStorage.setItem(\"movies\", JSON.stringify(movies));\n  }, [movies]);\n  const addMovie = () => {\n    if (movieTitle.trim()) {\n      const newMovies = [...movies, {\n        title: movieTitle,\n        id: Date.now()\n      }];\n      setMovies(newMovies);\n      setMovieTitle(\"\"); // Clear input after adding\n    }\n  };\n  const deleteMovie = id => {\n    const updatedMovies = movies.filter(movie => movie.id !== id);\n    setMovies(updatedMovies);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"StreamList Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Manage your streaming list below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter movie title...\",\n      value: movieTitle,\n      onChange: e => setMovieTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMovie,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [movie.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteMovie(movie.id),\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamListPage, \"58+DMX95CiEvhad0HZNNVBqxj70=\");\n_c = StreamListPage;\nexport default StreamListPage;\nvar _c;\n$RefreshReg$(_c, \"StreamListPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StreamListPage","_s","movies","setMovies","movieTitle","setMovieTitle","savedMovies","JSON","parse","localStorage","getItem","setItem","stringify","addMovie","trim","newMovies","title","id","Date","now","deleteMovie","updatedMovies","filter","movie","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Austi/streamlist/src/pages/StreamListPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst StreamListPage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [movieTitle, setMovieTitle] = useState(\"\");\r\n\r\n  // Load saved movies from local storage when the component mounts\r\n  useEffect(() => {\r\n    const savedMovies = JSON.parse(localStorage.getItem(\"movies\")) || [];\r\n    setMovies(savedMovies);\r\n  }, []);\r\n\r\n  // Save movies to local storage whenever the list updates\r\n  useEffect(() => {\r\n    localStorage.setItem(\"movies\", JSON.stringify(movies));\r\n  }, [movies]);\r\n\r\n  const addMovie = () => {\r\n    if (movieTitle.trim()) {\r\n      const newMovies = [...movies, { title: movieTitle, id: Date.now() }];\r\n      setMovies(newMovies);\r\n      setMovieTitle(\"\"); // Clear input after adding\r\n    }\r\n  };\r\n\r\n  const deleteMovie = (id) => {\r\n    const updatedMovies = movies.filter((movie) => movie.id !== id);\r\n    setMovies(updatedMovies);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>StreamList Page</h2>\r\n      <p>Manage your streaming list below:</p>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter movie title...\"\r\n        value={movieTitle}\r\n        onChange={(e) => setMovieTitle(e.target.value)}\r\n      />\r\n      <button onClick={addMovie}>Add</button>\r\n\r\n      <ul>\r\n        {movies.map((movie) => (\r\n          <li key={movie.id}>\r\n            {movie.title} \r\n            <button onClick={() => deleteMovie(movie.id)}>‚ùå</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StreamListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}